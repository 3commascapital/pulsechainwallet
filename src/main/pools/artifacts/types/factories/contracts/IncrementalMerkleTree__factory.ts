/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  IncrementalMerkleTree,
  IncrementalMerkleTreeInterface,
} from "../../contracts/IncrementalMerkleTree";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "poseidon",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LEVELS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOTS_CAPACITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidon",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000805534801561001457600080fd5b506040516108c53803806108c5833981016040819052610033916105ca565b6001600160a01b03166080527f0133a292295d50240eb5edfcaa95731512ccdaf79758573a1f627dc47adbde7e7fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49557f0ba2d612822ad57fd2285564f4bad51f685240488003085993bf5ee8e63c31cb7fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f557f27b302c974bf7444cb94f3eeae53d5cb897748679c94958c692567ed97e96c3c7fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f557f1c573635007d49a2e0e4e525a32ca29c3049377182bbb01efeddbcdfe513f82b7f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b557f2e1bf7a6e73442cdeaec1eb387d34b4a27f6957a2ae407bba844135fca5d8dbc7fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643557e09199390bdb47d6917f64668754dbeb426b43513fa7b0807d85794bd60270d7fe2689cd4a84e23ad2f564004f1c9013e9589d260bde6380aba3ca7e09e4df40c557f2f7739fa804b1102b2e95582a4cfb3c25d26e1f70133a81e6fed8fedbf7016ef7f8f331abe73332f95a25873e8b430885974c0409691f89d643119a11623a7924a557e371f555c474e2f7846b97c7a90dab5fcc55ac0010c271796ad497f666890337fdc686ec4a0ff239c70e7c7c36e8f853eced3bc8618f48d2b816da2a74311237e557f15b36b0debb62e1b11a9e331644a806960a4df8919180dc0745d17c7a912e9897f4db623e5c4870b62d3fc9b4e8f893a1a77627d75ab45d9ff7e56ba19564af99b557f0fab3738a9ec3b9c6eaa98bf46972ed3cbbae7982f0e69b3c7e9053adf32290d7f74a5fbcb419ab7dbacbb2c92a4e163730f0da5c72b911deecf4f05a6b327d0a4557f16824b083a3f105f6671a504c2379de67cc5154c5b557294e35d27d1d35312257f2a32391a76c35a36352b711f9152c0d0a340cd686850c8ef25fbb11c71b89e7b557f297ecae656a0fe904fe84f8db691c7156a51dd5e228873cf75ced697dd8e5c197ffc80cd5fe514767bc6e66ec558e68a5429ea70b50fa6caa3b53fc9278e918632557f067c35b9ac5cdc355c6f9eaef4721e6d622a4fd32d74d7be3f78b17e5d8597ea7f23bf72df16f8335be9a3eddfb5ef1c739b12847d13a384ec83f578699d38eb89557f2c2633f1ae47ae42e0ce8eadec89c64d44a1fa98f1ee85ad4bf536594af4e27f7f86b3fa87ee245373978e0d2d334dbde866c9b8b039036b87c5eb2fd89bcb6bab557f2d9c6e7eca6e7ba2b8335ae16998576602fe7910fb5ef41ce94d00b1332cf6247f57aaafa65c4e563d39fff90096a5fa76d42117f53d87ef870784e64d63a8a16b557f239f1418b2b0a70f468d0903cc46524d8f7efbdb2dfa561494ca5bffcc7877007f12bd632ff333b55931f9f8bda8b4ed27e86687f88c95871969d72474fb428c14557f0b15e263911ee4d77b6a394b70dc93ad3df6dfdf6a3f7605f9cafb6968d8f1f67f755311b9e2cee471a91b161ccc5deed933d844b5af2b885543cc3c04eb640983557f2c069c957125a3e2cb4e16ca506d5f4f387d11d1aea33b30a8dd4ca3074f4de67fc8d233a0ebef7c9a17d2b0b17eea62cca39002a128ccf419119b4a1a1f1e7428557f0be6d282d26c02019fd66e32c8d85154b77253e7c6016b26a991352e0016d5807f40165e7164257b249280bf839a50283d248062ed7b0e6d8820cb6c506bfcf7d3557f1e29cfb0c1ad522f22a3b3e23c057cbd3c7ab921e742a8dfcbc66dbde917d5b27f41cb80f82badddd72e38fda86a7cbba38fafd9735ef98c7795abbbaf2b149562556000805260026020527f2fb6e40b303cff95dec23c65cbfc0a74e935784e091b5a6cddc02faa6a7177e27fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b556105fa565b6000602082840312156105dc57600080fd5b81516001600160a01b03811681146105f357600080fd5b9392505050565b6080516102b0610615600039600061010901526102b06000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063c2b40ae41161005b578063c2b40ae4146100dc578063e2adba8c146100fc578063ed33639f14610104578063f178e47c1461015057600080fd5b806353e553711461008d5780635445b007146100a95780636840fcea146100b15780636d9833e3146100b9575b600080fd5b61009660005481565b6040519081526020015b60405180910390f35b610096610170565b610096601e81565b6100cc6100c7366004610226565b610199565b60405190151581526020016100a0565b6100966100ea366004610226565b60026020526000908152604090205481565b610096601481565b61012b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a0565b61009661015e366004610226565b60016020526000908152604090205481565b600060026000601e600054610185919061023f565b815260200190815260200160002054905090565b60008181036101aa57506000919050565b6000601e6000546101bb919061023f565b905060005b60008281526002602052604090205484036101df575060019392505050565b816000036101ec57601e91505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90910190600101601e81106101c0575060009392505050565b60006020828403121561023857600080fd5b5035919050565b600082610275577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea2646970667358221220f7de37c78df234860e05c5db56ebb5923e48ee8093b28d49ec432e00238b4d6764736f6c63430008180033";

type IncrementalMerkleTreeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IncrementalMerkleTreeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IncrementalMerkleTree__factory extends ContractFactory {
  constructor(...args: IncrementalMerkleTreeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    poseidon: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(poseidon, overrides || {});
  }
  override deploy(
    poseidon: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(poseidon, overrides || {}) as Promise<
      IncrementalMerkleTree & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): IncrementalMerkleTree__factory {
    return super.connect(runner) as IncrementalMerkleTree__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IncrementalMerkleTreeInterface {
    return new Interface(_abi) as IncrementalMerkleTreeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IncrementalMerkleTree {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IncrementalMerkleTree;
  }
}
