/* Autogenerated file. Do not edit manually. */
/* tslint:disable */

import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers'
import type { Signer, ContractDeployTransaction, ContractRunner } from 'ethers'
import type { NonPayableOverrides } from '../../../common'
import type { ReentrancyAttacker, ReentrancyAttackerInterface } from '../../../contracts/test/ReentrancyAttacker'

const _abi = [
  {
    stateMutability: 'payable',
    type: 'fallback',
  },
] as const

const _bytecode =
  '0x608060405234801561001057600080fd5b50610301806100206000396000f3fe600060c081815260e082905260046102409081527f3078303000000000000000000000000000000000000000000000000000000000610260526101005261038060408190526102808381526102a08490526102c08490526102e0849052610300849052610320849052610340849052610360849052610120526101408390526101608390526101808390526101a08390526101c08390526101e08390526102008390524261022052608091825260a0929092527fd922b60c000000000000000000000000000000000000000000000000000000009091523363d922b60c6100e8836103846101e0565b600060405180830381600087803b15801561010257600080fd5b505af1158015610116573d6000803e3d6000fd5b005b6002811061014f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b6000815180845260005b818110156101795760208185018101518683018201520161015d565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b8060005b60088110156101da5781518452602093840193909101906001016101bb565b50505050565b6020815260008251604060208401526101fd606084018251610118565b602081015162ffffff166080840152604081015161026060a085018190526102296102c0860183610153565b9150606083015161023d60c08701826101b7565b5060808301516101c086015260a08301516101e086015260c083015161020086015260e083015173ffffffffffffffffffffffffffffffffffffffff908116610220870152610100840151610240870152610120840151811691860191909152610140830151610280860152610160909201516102a08501526020949094015116604090920191909152509056fea2646970667358221220dbbba0e08fd7bc00c7c095ac7dfb5df870179b07d4861cf1ccba01e9bc1a18f164736f6c63430008180033'

type ReentrancyAttackerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (xs: ReentrancyAttackerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1

export class ReentrancyAttacker__factory extends ContractFactory {
  constructor(...args: ReentrancyAttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {})
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReentrancyAttacker & {
        deploymentTransaction(): ContractTransactionResponse
      }
    >
  }
  override connect(runner: ContractRunner | null): ReentrancyAttacker__factory {
    return super.connect(runner) as ReentrancyAttacker__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ReentrancyAttackerInterface {
    return new Interface(_abi) as ReentrancyAttackerInterface
  }
  static connect(address: string, runner?: ContractRunner | null): ReentrancyAttacker {
    return new Contract(address, _abi, runner) as unknown as ReentrancyAttacker
  }
}
