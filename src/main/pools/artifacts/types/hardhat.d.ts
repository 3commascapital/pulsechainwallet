/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from 'ethers'
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from '@nomicfoundation/hardhat-ethers/types'

import * as Contracts from '.'

declare module 'hardhat/types/runtime' {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: 'IERC1155Errors',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC1155Errors__factory>
    getContractFactory(
      name: 'IERC20Errors',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Errors__factory>
    getContractFactory(
      name: 'IERC721Errors',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC721Errors__factory>
    getContractFactory(
      name: 'ERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ERC20__factory>
    getContractFactory(
      name: 'IERC20Metadata',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Metadata__factory>
    getContractFactory(
      name: 'IERC20Permit',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20Permit__factory>
    getContractFactory(
      name: 'IERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IERC20__factory>
    getContractFactory(
      name: 'SafeERC20',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.SafeERC20__factory>
    getContractFactory(
      name: 'Address',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Address__factory>
    getContractFactory(
      name: 'ReentrancyGuard',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ReentrancyGuard__factory>
    getContractFactory(
      name: 'IncrementalMerkleTree',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IncrementalMerkleTree__factory>
    getContractFactory(
      name: 'IPoseidon',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.IPoseidon__factory>
    getContractFactory(
      name: 'PrivacyPool',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PrivacyPool__factory>
    getContractFactory(
      name: 'PrivacyPoolFactory',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.PrivacyPoolFactory__factory>
    getContractFactory(
      name: 'ReentrancyAttacker',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.ReentrancyAttacker__factory>
    getContractFactory(
      name: 'TestFilledSubtreesFinder',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.TestFilledSubtreesFinder__factory>
    getContractFactory(
      name: 'TestMerkleTree',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.TestMerkleTree__factory>
    getContractFactory(
      name: 'Token',
      signerOrOptions?: ethers.Signer | FactoryOptions,
    ): Promise<Contracts.Token__factory>

    getContractAt(
      name: 'IERC1155Errors',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC1155Errors>
    getContractAt(
      name: 'IERC20Errors',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Errors>
    getContractAt(
      name: 'IERC721Errors',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC721Errors>
    getContractAt(name: 'ERC20', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.ERC20>
    getContractAt(
      name: 'IERC20Metadata',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Metadata>
    getContractAt(
      name: 'IERC20Permit',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20Permit>
    getContractAt(
      name: 'IERC20',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IERC20>
    getContractAt(
      name: 'SafeERC20',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.SafeERC20>
    getContractAt(
      name: 'Address',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.Address>
    getContractAt(
      name: 'ReentrancyGuard',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ReentrancyGuard>
    getContractAt(
      name: 'IncrementalMerkleTree',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IncrementalMerkleTree>
    getContractAt(
      name: 'IPoseidon',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.IPoseidon>
    getContractAt(
      name: 'PrivacyPool',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PrivacyPool>
    getContractAt(
      name: 'PrivacyPoolFactory',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.PrivacyPoolFactory>
    getContractAt(
      name: 'ReentrancyAttacker',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.ReentrancyAttacker>
    getContractAt(
      name: 'TestFilledSubtreesFinder',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.TestFilledSubtreesFinder>
    getContractAt(
      name: 'TestMerkleTree',
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<Contracts.TestMerkleTree>
    getContractAt(name: 'Token', address: string | ethers.Addressable, signer?: ethers.Signer): Promise<Contracts.Token>

    deployContract(
      name: 'IERC1155Errors',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1155Errors>
    deployContract(
      name: 'IERC20Errors',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Errors>
    deployContract(
      name: 'IERC721Errors',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC721Errors>
    deployContract(name: 'ERC20', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.ERC20>
    deployContract(
      name: 'IERC20Metadata',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Metadata>
    deployContract(
      name: 'IERC20Permit',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Permit>
    deployContract(name: 'IERC20', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.IERC20>
    deployContract(
      name: 'SafeERC20',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SafeERC20>
    deployContract(name: 'Address', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.Address>
    deployContract(
      name: 'ReentrancyGuard',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ReentrancyGuard>
    deployContract(
      name: 'IncrementalMerkleTree',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IncrementalMerkleTree>
    deployContract(
      name: 'IPoseidon',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IPoseidon>
    deployContract(
      name: 'PrivacyPool',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PrivacyPool>
    deployContract(
      name: 'PrivacyPoolFactory',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PrivacyPoolFactory>
    deployContract(
      name: 'ReentrancyAttacker',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ReentrancyAttacker>
    deployContract(
      name: 'TestFilledSubtreesFinder',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.TestFilledSubtreesFinder>
    deployContract(
      name: 'TestMerkleTree',
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.TestMerkleTree>
    deployContract(name: 'Token', signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<Contracts.Token>

    deployContract(
      name: 'IERC1155Errors',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC1155Errors>
    deployContract(
      name: 'IERC20Errors',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Errors>
    deployContract(
      name: 'IERC721Errors',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC721Errors>
    deployContract(
      name: 'ERC20',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ERC20>
    deployContract(
      name: 'IERC20Metadata',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Metadata>
    deployContract(
      name: 'IERC20Permit',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20Permit>
    deployContract(
      name: 'IERC20',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IERC20>
    deployContract(
      name: 'SafeERC20',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.SafeERC20>
    deployContract(
      name: 'Address',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Address>
    deployContract(
      name: 'ReentrancyGuard',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ReentrancyGuard>
    deployContract(
      name: 'IncrementalMerkleTree',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IncrementalMerkleTree>
    deployContract(
      name: 'IPoseidon',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.IPoseidon>
    deployContract(
      name: 'PrivacyPool',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PrivacyPool>
    deployContract(
      name: 'PrivacyPoolFactory',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.PrivacyPoolFactory>
    deployContract(
      name: 'ReentrancyAttacker',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.ReentrancyAttacker>
    deployContract(
      name: 'TestFilledSubtreesFinder',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.TestFilledSubtreesFinder>
    deployContract(
      name: 'TestMerkleTree',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.TestMerkleTree>
    deployContract(
      name: 'Token',
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<Contracts.Token>

    // default types
    getContractFactory(name: string, signerOrOptions?: ethers.Signer | FactoryOptions): Promise<ethers.ContractFactory>
    getContractFactory(abi: any[], bytecode: ethers.BytesLike, signer?: ethers.Signer): Promise<ethers.ContractFactory>
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer,
    ): Promise<ethers.Contract>
    deployContract(name: string, signerOrOptions?: ethers.Signer | DeployContractOptions): Promise<ethers.Contract>
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions,
    ): Promise<ethers.Contract>
  }
}
